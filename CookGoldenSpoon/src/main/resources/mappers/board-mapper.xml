<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 연결할 인터페이스의 패키지명.인터페이스명을 작성 -->
<mapper namespace="com.m1k.goldenSpoon.board.model.mapper.BoardMapper">
	
	<!-- resultMap 태그
	1) 조회된 데이터의 컬럼명과 DTO 필드명이 일치하지 않을 때
		이를 매핑 시키는 용도
		
	2) resultMap 사용 시 다른 SELECT 구문을 추가로 수행하고 싶을 때
	-->
	<resultMap id="board_rm" type="Board">
		<id property="boardNo" column="BOARD_NO"/>
			<!-- collection 태그
        	select로 조회된 결과를 컬렉션(List)에 담아
        	지정된 필드에 세팅
         
            property : List를 담을 DTO의 필드명
            select : 실행할 select의 id
            column : 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
            javaType : List(컬렉션)의 타입을 지정
            ofType : List(컬렉션)의 제네릭(타입 제한) 지정
        -->
        <collection property="boardCommentList"
        			select="selectBoardComment"
        			column="BOARD_NO"
        			javaType="java.util.ArrayList"
        			ofType="BoardComment"
        			 />
		<collection property="imageList" 
               select="selectImageList" 
               column="BOARD_NO"
               javaType="java.util.ArrayList"
               ofType="BoardImg" />
			
	</resultMap>
	
	<!-- 이미지 리스트 -->
	<select id="selectImageList" resultType="BoardImg">
		SELECT * FROM BOARD_IMAGE
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectBoardComment" resultType="boardComment">
		SELECT LEVEL, C.* FROM
        	(SELECT BOARD_COMMENT_NO, BOARD_COMMENT_CONTENT,
            TO_CHAR(BOARD_COMMENT_ENROLL_DATE, 'YYYY-MM-DD HH24:MI:SS') BOARD_COMMENT_ENROLL_DATE,
            BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, MEMBER_PROFILE, BOARD_PARENT_NO, BOARD_COMMENT_DEL_FL
        FROM "BOARD_COMMENT"
        JOIN MEMBER USING(MEMBER_NO)
        WHERE BOARD_NO = #{boardNo}) C
      	WHERE BOARD_COMMENT_DEL_FL = 'N'
      	OR 0 != (SELECT COUNT(*) FROM "BOARD_COMMENT" SUB
        	WHERE SUB.BOARD_PARENT_NO = C.BOARD_COMMENT_NO
            AND BOARD_COMMENT_DEL_FL = 'N')
        START WITH BOARD_PARENT_NO IS NULL
        CONNECT BY PRIOR BOARD_COMMENT_NO = BOARD_PARENT_NO
        ORDER SIBLINGS BY BOARD_COMMENT_NO
	</select>
	
	<!-- 게시글 목록 조회 -->
	<select id="getBoardListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_CODE = #{boardCode}
	</select>
	
	<!-- 게시글 전체 조회 -->
	<select id="selectAllBoard" resultType="Board">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, 
		TO_CHAR(BOARD_ENROLL_DATE, 'YYYY-MM-DD') BOARD_ENROLL_DATE,
		BOARD_HITS, BOARD_CODE, MEMBER_NICKNAME, BOARD_TYPE
		FROM "BOARD"
		JOIN MEMBER USING(MEMBER_NO)
		JOIN BOARD_TYPE USING(BOARD_CODE)
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 게시글 상세 조회 -->
	<select id="boardDetail" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, 
		TO_CHAR(BOARD_ENROLL_DATE, 'YYYY-MM-DD') BOARD_ENROLL_DATE,
		BOARD_HITS, BOARD_CODE, MEMBER_NICKNAME, BOARD_TYPE, MEMBER_NO
		FROM "BOARD"
		JOIN MEMBER USING(MEMBER_NO)
		JOIN BOARD_TYPE USING(BOARD_CODE)
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_CODE = #{boardCode}
	</select>
	
	<!-- 게시글 조회 수 증가-->
	<update id="updateBoardHits">
		UPDATE "BOARD" SET BOARD_HITS = BOARD_HIT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
</mapper>